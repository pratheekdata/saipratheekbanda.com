name: Build sitemap

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    env:
      BASE_URL: https://saipratheekbanda.com

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Generate sitemap.xml (NYC dates, no future lastmod)
        run: |
          python - << 'PY'
          from pathlib import Path
          from datetime import datetime, timezone
          from xml.dom import minidom
          from zoneinfo import ZoneInfo
          import os, xml.etree.ElementTree as ET

          BASE_URL = (os.environ.get("BASE_URL") or "https://saipratheekbanda.com").rstrip("/")
          ROOT = Path.cwd()
          NYC = ZoneInfo("America/New_York")

          # Collect: root HTML excluding index.html (home is only "/"),
          # and all PDFs under /assets recursively.
          html_files = sorted(p for p in ROOT.glob("*.html") if p.name.lower() != "index.html")
          pdf_files  = sorted((ROOT / "assets").rglob("*.pdf")) if (ROOT / "assets").exists() else []
          files = html_files + pdf_files

          def add_url(parent, loc, lastmod=None, changefreq=None, priority=None):
              u = ET.SubElement(parent, "url")
              ET.SubElement(u, "loc").text = loc
              if lastmod: ET.SubElement(u, "lastmod").text = lastmod
              if changefreq: ET.SubElement(u, "changefreq").text = changefreq
              if priority: ET.SubElement(u, "priority").text = priority

          urlset = ET.Element("urlset", xmlns="http://www.sitemaps.org/schemas/sitemap/0.9")

          # Avoid duplicates
          seen = set()
          def add_unique(loc, **kw):
              if loc in seen:
                  return
              seen.add(loc)
              add_url(urlset, loc, **kw)

          # Home
          add_unique(f"{BASE_URL}/", changefreq="weekly", priority="1.0")

          # Today in New York
          today_nyc = datetime.now(NYC).date()

          for p in files:
              rel = "/" + str(p.relative_to(ROOT)).replace("\\", "/")

              # Convert file mtime to New York local date and clamp to today
              mtime_utc = datetime.fromtimestamp(p.stat().st_mtime, tz=timezone.utc)
              lastmod_local_date = mtime_utc.astimezone(NYC).date()
              if lastmod_local_date > today_nyc:
                  lastmod_local_date = today_nyc
              lastmod_str = lastmod_local_date.strftime("%Y-%m-%d")

              priority = "0.7" if p.suffix.lower() == ".html" else "0.5"
              add_unique(f"{BASE_URL}{rel}", lastmod=lastmod_str, changefreq="monthly", priority=priority)

          # Pretty XML with declaration
          rough = ET.tostring(urlset, encoding="utf-8")
          pretty = minidom.parseString(rough).toprettyxml(indent="  ", encoding="utf-8")
          Path("sitemap.xml").write_bytes(pretty)
          print("Wrote sitemap.xml")
          PY

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: bot/update-sitemap
          commit-message: "chore: update sitemap [skip ci]"
          title: "chore: update sitemap"
          body: "Automated sitemap update (NYC lastmod, clamped to today)."
          labels: automation
